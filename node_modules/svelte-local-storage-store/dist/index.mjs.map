{
  "version": 3,
  "sources": ["../index.ts"],
  "sourcesContent": ["import {writable as internal, get, Writable} from 'svelte/store'\n\ndeclare type Updater<T> = (value: T) => T;\ndeclare type StoreDict<T> = { [key: string]: Writable<T> }\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst stores: StoreDict<any> = {}\n\nexport function writable<T>(key: string, initialValue: T): Writable<T> {\n  const browser = typeof(localStorage) != 'undefined'\n\n  function updateStorage(key: string, value: T) {\n    if (!browser) return\n\n    localStorage.setItem(key, JSON.stringify(value))\n  }\n\n  if (!stores[key]) {\n    const store = internal(initialValue, (set) => {\n      const json = browser ? localStorage.getItem(key) : null\n\n      if (json) {\n        set(<T> JSON.parse(json))\n      }\n\n      if (browser) {\n        const handleStorage = (event: StorageEvent) => {\n          if (event.key === key)\n            set(event.newValue ? JSON.parse(event.newValue) : null)\n        }\n\n        window.addEventListener(\"storage\", handleStorage)\n\n        return () => window.removeEventListener(\"storage\", handleStorage)\n      }\n    })\n\n    const {subscribe, set} = store\n\n    stores[key] = {\n      set(value: T) {\n        updateStorage(key, value)\n        set(value)\n      },\n      update(updater: Updater<T>) {\n        const value = updater(get(store))\n\n        updateStorage(key, value)\n        set(value)\n      },\n      subscribe\n    }\n  }\n\n  return stores[key]\n}\n"],
  "mappings": ";AAAA;AAMA,IAAM,SAAyB;AAExB,kBAAqB,KAAa,cAA8B;AACrE,QAAM,UAAU,OAAO,gBAAiB;AAExC,yBAAuB,MAAa,OAAU;AAC5C,QAAI,CAAC;AAAS;AAEd,iBAAa,QAAQ,MAAK,KAAK,UAAU;AAAA;AAG3C,MAAI,CAAC,OAAO,MAAM;AAChB,UAAM,QAAQ,SAAS,cAAc,CAAC,SAAQ;AAC5C,YAAM,OAAO,UAAU,aAAa,QAAQ,OAAO;AAEnD,UAAI,MAAM;AACR,aAAQ,KAAK,MAAM;AAAA;AAGrB,UAAI,SAAS;AACX,cAAM,gBAAgB,CAAC,UAAwB;AAC7C,cAAI,MAAM,QAAQ;AAChB,iBAAI,MAAM,WAAW,KAAK,MAAM,MAAM,YAAY;AAAA;AAGtD,eAAO,iBAAiB,WAAW;AAEnC,eAAO,MAAM,OAAO,oBAAoB,WAAW;AAAA;AAAA;AAIvD,UAAM,EAAC,WAAW,QAAO;AAEzB,WAAO,OAAO;AAAA,MACZ,IAAI,OAAU;AACZ,sBAAc,KAAK;AACnB,YAAI;AAAA;AAAA,MAEN,OAAO,SAAqB;AAC1B,cAAM,QAAQ,QAAQ,IAAI;AAE1B,sBAAc,KAAK;AACnB,YAAI;AAAA;AAAA,MAEN;AAAA;AAAA;AAIJ,SAAO,OAAO;AAAA;",
  "names": []
}
